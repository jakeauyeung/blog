---
layout: post
title:  "INPUT在IE6/7下面边框BORDER:NONE/0的不同表现"
date:   2013-07-18 7:00:58
categories: update
---

把边框都去掉，按照习惯直接none，发现input text在IE6与IE7中边框并没有去掉（button类型的input有效果，边框已被去掉）。<br>
{% highlight css %}
input｛border:none;｝/* IE8 火狐 chrome*/
input[type=text]{ border:0; }/* 在所有input中类型是text的隐藏边框，兼容 ie7 ff chrome */
input{border:0;}/* 包括所有input，兼容 ie6 ie7 ff chrome */
{% endhighlight %}
后在网上搜索，这个border：none与border：0的区别<br>
border:none;与border:0;的区别体现有两点：一是理论上的性能差异二是浏览器兼容性的差异。<br><br>
<b>1.性能差异</b><br>
【border:0;】把border设为“0”像素虽然在页面上看不见，但按border默认值理解，浏览器依然对border-width/border-color进行了渲染，即已经占用了内存值。<br>
【border:none;】把border设为“none”即没有，浏览器解析“none”时将不作出渲染动作，即不会消耗内存值。<br><br>
<b>2.兼容性差异</b><br>
【border:none;】当border为“none”时对IE6/7无效边框依然存在<br>
【border:0;】当border为“0”时，所有浏览器都一致把边框隐藏<br><br>
<b>总结：</b><br>
1. 对比border:0;与border:none;之间的区别在于有渲染和没渲染，感觉他们和display:none;与visibility:hidden;的关系类似，而对于border属性的渲染性能对比暂时没找测试的方法，虽然认为他们存在渲染性能上的差异但也只能说是理论上。<br>
2. 如何让border:none;实现全兼容？只需要在同一选择符上添加背景属性即可<br>
3.对于border:0;与border:none;个人更向于使用,border:none;，因为border:none;毕竟在性能消耗没有争议，而且兼容性可用背景属性解决不足以成为障碍。